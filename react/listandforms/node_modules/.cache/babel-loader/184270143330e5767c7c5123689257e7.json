{"ast":null,"code":"import _classCallCheck from \"/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/src/Components/ContactList.js\";\nimport React, { Component } from 'react';\nimport { Table, Button } from 'semantic-ui-react';\n\nvar ContactList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ContactList, _Component);\n\n  function ContactList(props) {\n    var _this;\n\n    _classCallCheck(this, ContactList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ContactList).call(this, props));\n\n    _this.remove = function (id) {\n      var tempId = parseInt(id, 10);\n\n      if (_this.state.removeId === 0) {\n        _this.setState({\n          removeId: tempId\n        });\n\n        return;\n      }\n\n      if (tempId === _this.state.removeId) {\n        _this.props.remove(id);\n      }\n\n      _this.setState({\n        removeId: 0\n      });\n    };\n\n    _this.state = {\n      removeId: 0\n    };\n    return _this;\n  }\n\n  _createClass(ContactList, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (this.props.list.length === 0) {\n        return React.createElement(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, \"Nothing on the list\");\n      } else {\n        var listItems = this.props.list.map(function (item) {\n          var buttonText = \"Remove\";\n          var buttonColor = \"gray\";\n\n          if (item.id === _this2.state.removeId) {\n            buttonText = \"Confirm\";\n            buttonColor = \"red\";\n          }\n\n          return React.createElement(Table.Row, {\n            key: item.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38\n            },\n            __self: this\n          }, React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39\n            },\n            __self: this\n          }, item.firstname), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40\n            },\n            __self: this\n          }, item.lastname), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41\n            },\n            __self: this\n          }, item.address), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42\n            },\n            __self: this\n          }, item.email), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43\n            },\n            __self: this\n          }, item.phone), React.createElement(Table.Cell, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, React.createElement(Button, {\n            onClick: function onClick() {\n              return _this2.remove(item.id);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44\n            },\n            __self: this\n          }, buttonText)));\n        });\n        return React.createElement(Table, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, React.createElement(Table.Header, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }, React.createElement(Table.Row, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"First Name\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, \"Last Name\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, \"Address\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"E-mail\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Phone\"), React.createElement(Table.HeaderCell, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, \"Remove\"))), React.createElement(Table.Body, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, listItems));\n      }\n    }\n  }]);\n\n  return ContactList;\n}(Component);\n\nexport { ContactList as default };","map":{"version":3,"sources":["/Users/monikarangta/Documents/FullStackEspoo2019/react/listandforms/src/Components/ContactList.js"],"names":["React","Component","Table","Button","ContactList","props","remove","id","tempId","parseInt","state","removeId","setState","list","length","listItems","map","item","buttonText","buttonColor","firstname","lastname","address","email","phone"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {Table,Button} from 'semantic-ui-react';\n\nexport default class ContactList extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      removeId : 0\n    }\n  }\n  remove = (id) =>{\n    let tempId = parseInt(id,10);\n    if(this.state.removeId===0){\n      this.setState({\n        removeId:tempId\n      })\n      return;\n    }\n    if(tempId===this.state.removeId){\n    this.props.remove(id);\n    }\n    this.setState({\n      removeId:0\n    })\n  \n  }\n  render(){\n    if(this.props.list.length === 0){\n      return ( <h2>Nothing on the list</h2>)\n    }else{\n    let listItems = this.props.list.map(item =>{\n      let buttonText=\"Remove\";\n      let buttonColor =\"gray\";\n      if(item.id===this.state.removeId){\n        buttonText=\"Confirm\";\n        buttonColor=\"red\";\n      }\n      return <Table.Row key = {item.id}>\n        <Table.Cell>{item.firstname}</Table.Cell>\n        <Table.Cell>{item.lastname}</Table.Cell>\n        <Table.Cell>{item.address}</Table.Cell>\n        <Table.Cell>{item.email}</Table.Cell>\n        <Table.Cell>{item.phone}</Table.Cell>\n        <Table.Cell><Button onClick={()=> this.remove(item.id)}>{buttonText}</Button></Table.Cell>\n      </Table.Row>\n    })\n\n    return(\n      <Table>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell>First Name</Table.HeaderCell>\n            <Table.HeaderCell>Last Name</Table.HeaderCell>\n            <Table.HeaderCell>Address</Table.HeaderCell>\n            <Table.HeaderCell>E-mail</Table.HeaderCell>\n            <Table.HeaderCell>Phone</Table.HeaderCell>\n            <Table.HeaderCell>Remove</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {listItems}\n        </Table.Body>\n      </Table>\n    );\n  }\n}\n}\n"]},"metadata":{},"sourceType":"module"}